name: Python packages

on:
  create:
    tags:
    - v*
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    name: "Test ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', pypy3]
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      run: |
        git submodule init
        git submodule update
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Test with pytest
      run: |
        pip install pytest
        pytest jellyfish/test.py

  build:
    name: "Build ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
        - os: ubuntu-latest
          python-version: pypy3

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      run: |
        git submodule init
        git submodule update
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: python -m pip install --upgrade pip build

    - name: Build package
      run: python -m build

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: artifacts
        path: dist/*
        
  manylinux-arm64:
    name: "${{ matrix.python-version }} manylinux2014-aarch64"
    runs-on: ubuntu-latest
    strategy:
       matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
         git submodule init
         git submodule update
      - run: |
          docker run --rm --privileged hypriot/qemu-register
      - uses: docker://quay.io/pypa/manylinux2014_aarch64
        # The weird pip cache nonsense below is due to docker ownership issues. We want
        # a cache because otherwise we end up building cffi twice.
        with:
          args: |
              bash -c "set -xe;
              mkdir -p /github/home/.cache/pip;
              chown -R $(whoami) /github/home/.cache;
              /opt/python/${{ matrix.PYTHON.VERSION }}/bin/python -m venv .venv;
              .venv/bin/pip install -U pip build;
              ../.venv/bin/python python -m build;
              auditwheel repair dist/jellyfish*.whl -w wheelhouse/;
              .venv/bin/pip install jellyfish --no-index -f wheelhouse/;"
      - run: mkdir jellyfish-wheelhouse
      - run: sudo mv wheelhouse/jellyfish*.whl jellyfish-wheelhouse/
      - uses: actions/upload-artifact@v1
        with:
          name: "jellyfish-${{ github.event.inputs.version }}-manylinux2014-aarch64-${{ matrix.PYTHON.ABI_VERSION }}"
          path: jellyfish-wheelhouse/

  publish:
    name: Publish release
    runs-on: ubuntu-latest
    needs:
    - build

    # Only publish tags
    if: github.event_name == 'create' && github.event.ref_type == 'tag'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: dist

    - name: Push build artifacts to PyPI
      uses: pypa/gh-action-pypi-publish@v1.4.1
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
